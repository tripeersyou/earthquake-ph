<%- include('layouts/header') %>
 <div id="quake-map">
  <% if(filtered){ %>
    <div class="leaflet-bottom leaflet-left">
        <div class="ui info message leaflet-control">
        <b class="header">
            Filtered Quake Map
        </b>
        <ul class="list">
            <li>Results: <%- data.length %> earthquakes found.</li>
        </ul>
        </div>
    </div>
 <% } %>
    <div class="leaflet-top leaflet-right">
        <button class="leaflet-control ui button primary" id="customizeMap">Filter Earthquakes</button>
    </div>      
 </div>
 <div class="ui modal">
  <div class="header">Customize Quake Map</div>
  <div class="content">
    <form action="/quake-map" method ="get" class="ui form">
        <div class="field">
            <label for="provinces">Provinces</label>
            <select multiple class="ui search selection dropdown" name="provinces[]">
                <% provinces.forEach(function(p){ %>
                    <option value="<%- p %>"><%- p %></option>
                <% }); %>
            </select>
        </div>
        <div class="field">
            <label for="daterange">Date Range</label>
            <input type="text" name="daterange" id="daterange">
        </div>
        <div class="field">
            <label for="earthquake_details[strength]">Minimum Magnitude</label>
            <input type="number" name="earthquake_details[strength]" id="magnitudeThreshold"min="0" max="10" step="0.1">
        </div>
        <div class="field">
            <label for="earthquake_details[depth]">Minimum Depth</label>
            <input type="number" name="earthquake_details[depth]" id="depthThreshold" min= "0">
        </div>
  </div>
  <div class="actions">
    <button class="ui button positive">Submit</button>
  </div>
    </form>
</div>
 <script>
    let quakeMap = L.map('quake-map').setView([12.8797, 121.7740], 5.5);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(quakeMap);

    <% for(let i = 0; i < data.length; i++){ %>
        L.marker([<%- data[i].earthquake_details.lat %>, <%- data[i].earthquake_details.lon %>]).addTo(quakeMap).bindPopup('<b>Province:</b> <%-data[i].province %><br><b>Strength:</b> Magnitude <%- data[i].earthquake_details.strength %><br><b>Date and Time:</b> <%-data[i].earthquake_details.datetime %><br><b>Depth:</b> <%-data[i].earthquake_details.depth %> km<br><a href="/quake/<%-data[i].id_str%>" >Details</a>')
        L.circle([<%- data[i].earthquake_details.lat %>, <%- data[i].earthquake_details.lon %>], <%- (data[i].earthquake_details.strength * 1500) * 1.5 %>).addTo(quakeMap)
   <% } %>
    const greenIcon = new L.Icon({
        iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
    });
    if ("geolocation" in navigator) {
        let currentPositionMarker = '';
        navigator.geolocation.watchPosition(function(position) {
            if (currentPositionMarker != ''){
                quakeMap.removeLayer(currentPositionMarker);
            }
            currentPositionMarker = L.marker([position.coords.latitude, position.coords.longitude],{icon: greenIcon}).addTo(quakeMap)
                .bindPopup("Your current location")
                .openPopup();
        });
    } else {
        console.log("Geolocation is not available for this device");
    }
 </script>

 <style>
 .ui.menu {
    margin-top: 0px;
    z-index: 9999;}
</style>
<%- include('layouts/footer') %>
