<%- include('layouts/header') %>
 <div id="quake-map">
 </div>

 <script>
    let quakeMap = L.map('quake-map',{zoomControl: false}).setView([12.8797, 121.7740], 5.5);
    let accessToken ='pk.eyJ1IjoiZm9hdmFuY2VuYSIsImEiOiJjazVub3k4bnAwOXVrM2xtZ2FvbmVvcW81In0.GqIGwkG8lgbF_3Q9hXhBng';
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    	attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(quakeMap);
    let markers = L.markerClusterGroup();
    $.ajax({
        dataType: "text",
        url:`https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/<%=dataDate%>.csv`,
        success: function(data){ 
            let json = $.csv.toObjects(data);
            console.log(json)
            for (let i = 0; i < json.length; i++){
                let quakeMarker
                if(parseInt(json[i].Confirmed) - parseInt(json[i].Recovered) < 10){
                    if(json[i].Lat != "" && json[i].Long_ != ""){
                    quakeMarker = L.circleMarker([parseFloat(json[i].Lat), parseFloat(json[i].Long_)], {color: '#00ff00' })
                    }
                } else if (parseInt(json[i].Confirmed) - parseInt(json[i].Recovered) < 100){
                    if(json[i].Lat != "" && json[i].Long_ != ""){
                    quakeMarker = L.circleMarker([parseFloat(json[i].Lat), parseFloat(json[i].Long_)], {color: '#ffff00'})
                    }
                } else if (parseInt(json[i].Confirmed) - parseInt(json[i].Recovered) < 1000) {
                    if(json[i].Lat != "" && json[i].Long_ != ""){
                    quakeMarker = L.circleMarker([parseFloat(json[i].Lat), parseFloat(json[i].Long_)], {color: '#ff0000'})
                    }
                } else if (parseInt(json[i].Confirmed) - parseInt(json[i].Recovered) > 1000) {
                    if(json[i].Lat != "" && json[i].Long_ != ""){
                    quakeMarker = L.circleMarker([parseFloat(json[i].Lat), parseFloat(json[i].Long_)], {color: '#00000'})
                    }
                }
                 if(json[i].Lat != "" && json[i].Long_ != ""){
                    quakeMarker.bindPopup(`<b>${json[i]["Country_Region"]} ${json[i]["Province_State"]} ${json[i]["Admin2"]}</b><br><br><b>Infected:</b> ${json[i].Confirmed}<br><b>Deaths:</b> ${json[i].Deaths}<br><b>Recovered:</b> ${json[i].Recovered}`)
                    markers.addLayer(quakeMarker);
                    quakeMap.addLayer(markers);
                 }
            }
            
        }
    });    
    if ("geolocation" in navigator) {
        let currentPositionMarker = '';
        navigator.geolocation.watchPosition(function(position) {
            if (currentPositionMarker != ''){
                quakeMap.removeLayer(currentPositionMarker);
            }
            currentPositionMarker = L.circleMarker([position.coords.Lat, position.coords.Long_],{fillOpacity: 0.5, weight: 1}).addTo(quakeMap)
                .bindPopup("Your current location")
        });
    } else {
        console.log("Geolocation is not available for this device");
    }
 </script>

 <style>
 .ui.menu {
    margin-top: 0px;
    z-index: 9999;}
</style>
<%- include('layouts/footer') %>
